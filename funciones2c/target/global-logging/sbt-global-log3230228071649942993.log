[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(early(addPluginSbtFile="""C:\Users\Usuario\AppData\Local\Temp\idea.sbt"""), None, None)
[debug] > Exec(addPluginSbtFile="""C:\Users\Usuario\AppData\Local\Temp\idea.sbt""", None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.4.7 (Oracle Corporation Java 15.0.2)
[debug]       Load.loadUnit: plugins took 46.7623ms
[debug]       Load.loadUnit: defsScala took 0.159ms
[debug] [Loading] Scanning directory C:\Users\Usuario\.sbt\1.0\plugins
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Usuario\.sbt\1.0\plugins, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.8523 ms
[debug]           Load.resolveProject(global-plugins) took 23.4845ms
[debug]         Load.loadTransitive: finalizeProject(Project(id global-plugins, base: C:\Users\Usuario\.sbt\1.0\plugins, plugins: List(<none>))) took 46.6712ms
[debug] [Loading] Done in C:\Users\Usuario\.sbt\1.0\plugins, returning: (global-plugins)
[debug]       Load.loadUnit: loadedProjectsRaw took 59.1659ms
[debug]       Load.loadUnit: cleanEvalClasses took 0.1309ms
[debug]     Load.loadUnit(file:/C:/Users/Usuario/.sbt/1.0/plugins/, ...) took 111.396ms
[debug]   Load.apply: load took 213.0438ms
[debug]   Load.apply: resolveProjects took 3.2441ms
[debug]   Load.apply: finalTransforms took 32.7925ms
[debug]   Load.apply: config.delegates took 3.9328ms
[debug]   Load.apply: Def.make(settings)... took 390.6651ms
[debug]   Load.apply: structureIndex took 52.5932ms
[debug]   Load.apply: mkStreams took 0.8582ms
[info] loading global plugins from C:\Users\Usuario\.sbt\1.0\plugins
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug] Load.defaultLoad until apply took 7057.9791ms
[debug]           Load.loadUnit: plugins took 13.0444ms
[debug]           Load.loadUnit: defsScala took 0.002ms
[debug] [Loading] Scanning directory C:\Users\Usuario\Documents\GitHub\NTP\funciones2c\project
[debug]             Load.loadUnit: mkEval took 3.5912ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Usuario\Documents\GitHub\NTP\funciones2c\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 0.6916 ms
[info] loading settings for project funciones2c-build from idea.sbt ...
[debug]               Load.resolveProject(funciones2c-build) took 1.4967ms
[debug]             Load.loadTransitive: finalizeProject(Project(id funciones2c-build, base: C:\Users\Usuario\Documents\GitHub\NTP\funciones2c\project, plugins: List(<none>))) took 2.4232ms
[debug] [Loading] Done in C:\Users\Usuario\Documents\GitHub\NTP\funciones2c\project, returning: (funciones2c-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 1264.9258ms
[debug]           Load.loadUnit: cleanEvalClasses took 3.4097ms
[debug]         Load.loadUnit(file:/C:/Users/Usuario/Documents/GitHub/NTP/funciones2c/project/, ...) took 1281.9125ms
[debug]       Load.apply: load took 1282.7542ms
[debug]       Load.apply: resolveProjects took 0.0601ms
[debug]       Load.apply: finalTransforms took 5.7827ms
[debug]       Load.apply: config.delegates took 0.2203ms
[debug]       Load.apply: Def.make(settings)... took 50.5975ms
[debug]       Load.apply: structureIndex took 14.813ms
[debug]       Load.apply: mkStreams took 0.0024ms
[info] loading project definition from C:\Users\Usuario\Documents\GitHub\NTP\funciones2c\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1813.0577ms
[debug]     Load.loadUnit: defsScala took 0.0016ms
[debug] [Loading] Scanning directory C:\Users\Usuario\Documents\GitHub\NTP\funciones2c
[debug]       Load.loadUnit: mkEval took 0.1347ms
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\Usuario\Documents\GitHub\NTP\funciones2c, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(List(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin))), Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.StructurePlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.IdeaShellPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin))), Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin))), Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.StructurePlugin))), Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(org.jetbrains.sbt.IdeaShellPlugin))), Clause(And(Set(Atom(sbt.plugins.CorePlugin), Atom(sbt.plugins.JvmPlugin))),Set(Atom(org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin)))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.SemanticdbPlugin,org.jetbrains.sbt.indices.SbtIntellijIndicesPlugin,sbt.plugins.JUnitXmlReportPlugin,org.jetbrains.sbt.IdeaShellPlugin,org.jetbrains.sbt.StructurePlugin,sbt.plugins.MiniDependencyTreePlugin)
[debug] Plugins.deducer#function took 0.985 ms
[info] loading settings for project funciones2c from build.sbt ...
[debug]         Load.resolveProject(funciones2c) took 18.6712ms
[debug]       Load.loadTransitive: finalizeProject(Project(id funciones2c, base: C:\Users\Usuario\Documents\GitHub\NTP\funciones2c, plugins: List(<none>))) took 20.3378ms
[debug] [Loading] Done in C:\Users\Usuario\Documents\GitHub\NTP\funciones2c, returning: (funciones2c)
[debug]     Load.loadUnit: loadedProjectsRaw took 708.3208ms
[debug]     Load.loadUnit: cleanEvalClasses took 13.3535ms
[debug]   Load.loadUnit(file:/C:/Users/Usuario/Documents/GitHub/NTP/funciones2c/, ...) took 2535.2266ms
[debug] Load.apply: load took 2536.2164ms
[debug] Load.apply: resolveProjects took 0.0818ms
[debug] Load.apply: finalTransforms took 12.5438ms
[debug] Load.apply: config.delegates took 0.2008ms
[debug] Load.apply: Def.make(settings)... took 39.0239ms
[debug] Load.apply: structureIndex took 14.306ms
[debug] Load.apply: mkStreams took 0.0015ms
[info] set current project to funciones2c (in build file:/C:/Users/Usuario/Documents/GitHub/NTP/funciones2c/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(; set ideaPort in Global := 51434 ; idea-shell, None, None)
[debug] > Exec(set ideaPort in Global := 51434, None, None)
[info] Defining Global / ideaPort
[info] The new value will be used by Compile / compile, Test / compile
[debug] Defining 
[debug] 	Global / ideaPort
[debug] 
[debug] The new value will be used by 
[debug] 	Compile / compile
[debug] 	Test / compile
[info] Reapplying settings...
[info] set current project to funciones2c (in build file:/C:/Users/Usuario/Documents/GitHub/NTP/funciones2c/)
[debug] > Exec(idea-shell, None, None)
